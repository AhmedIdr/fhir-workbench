"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/store.ts":
/*!**************************!*\
  !*** ./src/lib/store.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLeaderboardStore: function() { return /* binding */ useLeaderboardStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _data_leaderboard_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data/leaderboard.json */ \"(app-pages-browser)/./src/data/leaderboard.json\");\n\n\n// Helper function to calculate average score excluding null values\nconst calculateAverage = (tasks)=>{\n    const validValues = Object.values(tasks).filter((val)=>val !== null);\n    if (validValues.length === 0) return 0; // Default to 0 for sorting purposes\n    return validValues.reduce((sum, val)=>sum + val, 0) / validValues.length;\n};\n// Helper function to safely compare values that might be null\nconst safeCompare = (a, b)=>{\n    // Null values are placed at the end when sorting\n    if (a === null && b === null) return 0;\n    if (a === null) return 1; // null is \"greater\" (goes to the end)\n    if (b === null) return -1; // null is \"greater\" (goes to the end)\n    return a - b;\n};\nconst useLeaderboardStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        models: _data_leaderboard_json__WEBPACK_IMPORTED_MODULE_0__.models,\n        selectedSize: \"all\",\n        sortConfig: {\n            key: null,\n            direction: \"desc\"\n        },\n        searchQuery: \"\",\n        activeQuickFilter: null,\n        setSelectedSize: (size)=>set({\n                selectedSize: size\n            }),\n        setSortConfig: (key)=>set((state)=>({\n                    sortConfig: {\n                        key,\n                        direction: key === null ? \"desc\" : state.sortConfig.key === key && state.sortConfig.direction === \"desc\" ? \"asc\" : \"desc\"\n                    }\n                })),\n        setSearchQuery: (query)=>set({\n                searchQuery: query\n            }),\n        setQuickFilter: (filter)=>set((state)=>({\n                    activeQuickFilter: state.activeQuickFilter === filter ? null : filter\n                })),\n        getTotalModelCount: ()=>_data_leaderboard_json__WEBPACK_IMPORTED_MODULE_0__.models.length,\n        getAverageScore: ()=>{\n            const models = _data_leaderboard_json__WEBPACK_IMPORTED_MODULE_0__.models;\n            const totalScores = models.reduce((acc, model)=>{\n                const avgScore = calculateAverage(model.tasks);\n                return acc + avgScore;\n            }, 0);\n            return totalScores / models.length;\n        },\n        getFilteredAndSortedModels: ()=>{\n            const { models, selectedSize, sortConfig, searchQuery, activeQuickFilter } = get();\n            let filteredModels = [\n                ...models\n            ];\n            // Apply quick filters first\n            if (activeQuickFilter) {\n                switch(activeQuickFilter){\n                    case \"open-source\":\n                        filteredModels = filteredModels.filter((model)=>model.size !== \"Closed\");\n                        break;\n                    case \"closed-source\":\n                        filteredModels = filteredModels.filter((model)=>model.size === \"Closed\");\n                        break;\n                    case \"small\":\n                        filteredModels = filteredModels.filter((model)=>{\n                            if (model.size === \"Closed\") return false;\n                            const modelSize = parseInt(model.size);\n                            return modelSize <= 7;\n                        });\n                        break;\n                    case \"medium\":\n                        filteredModels = filteredModels.filter((model)=>{\n                            if (model.size === \"Closed\" || model.size === \">70\") return false;\n                            const modelSize = parseInt(model.size);\n                            return modelSize > 7 && modelSize <= 32;\n                        });\n                        break;\n                    case \"large\":\n                        filteredModels = filteredModels.filter((model)=>{\n                            if (model.size === \"Closed\") return false;\n                            return model.size === \"70\" || model.size === \">70\";\n                        });\n                        break;\n                }\n            } else if (selectedSize !== \"all\") {\n                if (selectedSize === \"Closed\") {\n                    filteredModels = filteredModels.filter((model)=>model.size === \"Closed\");\n                } else if (selectedSize === \">70\") {\n                    filteredModels = filteredModels.filter((model)=>{\n                        if (model.size === \"Closed\") return false;\n                        if (model.size === \">70\") return true;\n                        const modelSize = parseInt(model.size);\n                        return modelSize > 70;\n                    });\n                } else {\n                    // \"Less than or equal to\" filter\n                    const sizeThreshold = parseInt(selectedSize);\n                    filteredModels = filteredModels.filter((model)=>{\n                        if (model.size === \"Closed\" || model.size === \">70\") return false;\n                        const modelSize = parseInt(model.size);\n                        return modelSize <= sizeThreshold;\n                    });\n                }\n            }\n            // Filter by search query\n            if (searchQuery.trim() !== \"\") {\n                try {\n                    // Check if query contains multiple search terms\n                    if (searchQuery.includes(\";\")) {\n                        const terms = searchQuery.split(\";\").map((term)=>term.trim()).filter(Boolean);\n                        filteredModels = filteredModels.filter((model)=>{\n                            return terms.some((term)=>{\n                                try {\n                                    const regex = new RegExp(term, \"i\");\n                                    return regex.test(model.name);\n                                } catch (e) {\n                                    return model.name.toLowerCase().includes(term.toLowerCase());\n                                }\n                            });\n                        });\n                    } else {\n                        // Single search term (potentially regex)\n                        const regex = new RegExp(searchQuery, \"i\");\n                        filteredModels = filteredModels.filter((model)=>regex.test(model.name));\n                    }\n                } catch (e) {\n                    // Fallback to simple string match if regex is invalid\n                    const lowerQuery = searchQuery.toLowerCase();\n                    filteredModels = filteredModels.filter((model)=>model.name.toLowerCase().includes(lowerQuery));\n                }\n            }\n            // Sort models\n            return filteredModels.sort((a, b)=>{\n                if (!sortConfig.key) {\n                    const aAvg = calculateAverage(a.tasks);\n                    const bAvg = calculateAverage(b.tasks);\n                    return sortConfig.direction === \"asc\" ? aAvg - bAvg : bAvg - aAvg;\n                }\n                const aVal = a.tasks[sortConfig.key];\n                const bVal = b.tasks[sortConfig.key];\n                return sortConfig.direction === \"asc\" ? safeCompare(aVal, bVal) : safeCompare(bVal, aVal);\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/store.ts\n"));

/***/ })

});